- name: Wait for kubeconfig file on k3s node
  ansible.builtin.wait_for:
    path: "{{ kubeconfig_remote }}"
    timeout: 3600
    sleep: 60
    state: present

- name: Fetch kubeconfig from k3s node
  ansible.builtin.fetch:
    src: "{{ kubeconfig_remote }}"
    dest: "/tmp/k3s-{{ inventory_hostname }}.yaml"
    flat: true

- name: Replace localhost with node IP in kubeconfig
  ansible.builtin.replace:
    path: "/tmp/k3s-{{ inventory_hostname }}.yaml"
    regexp: "127\\.0\\.0\\.1"
    replace: "{{ node_ip }}"
  delegate_to: localhost

- name: Move kubeconfig into place for Ansible
  ansible.builtin.copy:
    src: "/tmp/k3s-{{ inventory_hostname }}.yaml"
    dest: "{{ kubeconfig_local }}"
    mode: '0600'
  delegate_to: localhost

- name: Ensure kubectl is installed
  ansible.builtin.package:
    name: kubectl
    state: present

- name: Install kubernetes.core Ansible Collection
  ansible.builtin.command:
    cmd: ansible-galaxy collection install kubernetes.core
  args:
    creates: "~/.ansible/collections/ansible_collections/kubernetes/core"

- name: Wait until all nodes are Ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    kubeconfig: "{{ kubeconfig_local }}"
  register: node_info
  until: >
    node_info.resources | length > 0 and
    (node_info.resources | map(attribute='status.conditions') | flatten |
      selectattr('type','equalto','Ready') |
      selectattr('status','equalto','True') | list | length) ==
    (node_info.resources | length)
  retries: 60
  delay: 60

- name: Add Longhorn Helm repo
  community.kubernetes.helm_repository:
    name: longhorn
    repo_url: https://charts.longhorn.io
    state: present
    update_cache: yes
    kubeconfig: "{{ kubeconfig_local }}"

- name: Create Longhorn namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "longhorn-system"
    kubeconfig: "{{ kubeconfig_local }}"

- name: Install Longhorn via Helm
  community.kubernetes.helm:
    name: longhorn
    chart_ref: longhorn/longhorn
    release_namespace: "longhorn-system"
    kubeconfig: "{{ kubeconfig_local }}"

- name: Add Rancher Helm repo
  community.kubernetes.helm_repository:
    name: rancher-stable
    repo_url: https://releases.rancher.com/server-charts/latest
    state: present
    update_cache: yes
    kubeconfig: "{{ kubeconfig_local }}"

- name: Create Rancher namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: cattle-system
    kubeconfig: "{{ kubeconfig_local }}"

- name: Install cert-manager for Rancher
  community.kubernetes.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    release_namespace: cert-manager
    create_namespace: true
    kubeconfig: "{{ kubeconfig_local }}"
    values:
      installCRDs: true

- name: Install Rancher via Helm
  community.kubernetes.helm:
    name: rancher
    chart_ref: rancher-stable/rancher
    release_namespace: cattle-system
    kubeconfig: "{{ kubeconfig_local }}"
    values:
      hostname: "rancher.local"
      replicas: 1
      ingress:
        tls:
          source: secret
